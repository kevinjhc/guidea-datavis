[{"/Users/Kevin/github/datavis-master/src/components/App.js":"1","/Users/Kevin/github/datavis-master/src/components/charts/StackedBarChart.js":"2","/Users/Kevin/github/datavis-master/src/components/charts/PieChart.js":"3","/Users/Kevin/github/datavis-master/src/components/charts/ScatterPlotChart.js":"4","/Users/Kevin/github/datavis-master/src/components/charts/BarChart.js":"5","/Users/Kevin/github/datavis-master/src/components/charts/LineChart.js":"6","/Users/Kevin/github/datavis-master/src/components/charts/HeatmapChart.js":"7","/Users/Kevin/github/datavis-master/src/components/charts/AreaChart.js":"8","/Users/Kevin/github/datavis-master/src/components/charts/RadarChart.js":"9","/Users/Kevin/github/datavis-master/src/components/charts/ChartColors.js":"10","/Users/Kevin/github/datavis-master/src/components/charts/GroupedBarChart.js":"11","/Users/Kevin/github/datavis-master/src/reportWebVitals.js":"12","/Users/Kevin/github/datavis-master/src/components/Sidebar.js":"13","/Users/Kevin/github/datavis-master/src/index.js":"14"},{"size":9191,"mtime":1611176857304,"results":"15","hashOfConfig":"16"},{"size":4865,"mtime":1611176732185,"results":"17","hashOfConfig":"16"},{"size":2673,"mtime":1610979729031,"results":"18","hashOfConfig":"16"},{"size":10591,"mtime":1611176490056,"results":"19","hashOfConfig":"16"},{"size":2419,"mtime":1611175877991,"results":"20","hashOfConfig":"16"},{"size":7235,"mtime":1611174990794,"results":"21","hashOfConfig":"16"},{"size":3575,"mtime":1610980283521,"results":"22","hashOfConfig":"16"},{"size":4883,"mtime":1611175936116,"results":"23","hashOfConfig":"16"},{"size":3887,"mtime":1610980262370,"results":"24","hashOfConfig":"16"},{"size":1385,"mtime":1611181112303,"results":"25","hashOfConfig":"16"},{"size":4297,"mtime":1611175868451,"results":"26","hashOfConfig":"16"},{"size":362,"mtime":1608216214000,"results":"27","hashOfConfig":"16"},{"size":3008,"mtime":1611180654511,"results":"28","hashOfConfig":"16"},{"size":514,"mtime":1611169736624,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xfk9d7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Kevin/github/datavis-master/src/components/App.js",[],"/Users/Kevin/github/datavis-master/src/components/charts/StackedBarChart.js",["64","65","66","67","68"],"/Users/Kevin/github/datavis-master/src/components/charts/PieChart.js",["69"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsivePie } from '@nivo/pie';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"label\": \"Category 1\",\n    \"value\": 422,\n  },\n  {\n    \"id\": \"Category 2\",\n    \"label\": \"Category 2\",\n    \"value\": 120,\n  },\n  {\n    \"id\": \"Category 3\",\n    \"label\": \"Category 3\",\n    \"value\": 506,\n  },\n  {\n    \"id\": \"Category 4\",\n    \"label\": \"Category 4\",\n    \"value\": 295,\n  },\n  {\n    \"id\": \"Category 5\",\n    \"label\": \"Category 5\",\n    \"value\": 439,\n  },\n  {\n    \"id\": \"Category 6\",\n    \"label\": \"Category 6\",\n    \"value\": 79,\n  }\n\n]\n\nclass PieChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n    }\n\n    return (\n    <>\n      <ResponsivePie\n        data={displayData}\n        margin={{ top: 20, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        radialLabelsSkipAngle={10}\n        radialLabelsLinkColor={{ from: 'color' }}\n        sliceLabelsSkipAngle={10}\n        legends={[\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 56,\n            itemsSpacing: 0,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableSliceLabels={false}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default PieChart;\n",["70","71"],"/Users/Kevin/github/datavis-master/src/components/charts/ScatterPlotChart.js",["72","73","74"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"data\": [\n      {\n        \"x\": 31,\n        \"y\": 26\n      },\n      {\n        \"x\": 66,\n        \"y\": 1\n      },\n      {\n        \"x\": 76,\n        \"y\": 11\n      },\n      {\n        \"x\": 4,\n        \"y\": 110\n      },\n      {\n        \"x\": 5,\n        \"y\": 68\n      },\n      {\n        \"x\": 27,\n        \"y\": 62\n      },\n      {\n        \"x\": 8,\n        \"y\": 86\n      },\n      {\n        \"x\": 85,\n        \"y\": 92\n      },\n      {\n        \"x\": 95,\n        \"y\": 113\n      },\n      {\n        \"x\": 45,\n        \"y\": 106\n      },\n      {\n        \"x\": 60,\n        \"y\": 50\n      },\n      {\n        \"x\": 17,\n        \"y\": 106\n      },\n      {\n        \"x\": 82,\n        \"y\": 97\n      },\n      {\n        \"x\": 26,\n        \"y\": 108\n      },\n      {\n        \"x\": 50,\n        \"y\": 81\n      },\n      {\n        \"x\": 13,\n        \"y\": 110\n      },\n      {\n        \"x\": 100,\n        \"y\": 12\n      },\n      {\n        \"x\": 69,\n        \"y\": 51\n      },\n      {\n        \"x\": 25,\n        \"y\": 55\n      },\n      {\n        \"x\": 91,\n        \"y\": 11\n      },\n      {\n        \"x\": 47,\n        \"y\": 17\n      },\n      {\n        \"x\": 21,\n        \"y\": 18\n      },\n      {\n        \"x\": 58,\n        \"y\": 103\n      },\n      {\n        \"x\": 100,\n        \"y\": 59\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 2\",\n    \"data\": [\n      {\n        \"x\": 1,\n        \"y\": 52\n      },\n      {\n        \"x\": 44,\n        \"y\": 100\n      },\n      {\n        \"x\": 63,\n        \"y\": 6\n      },\n      {\n        \"x\": 81,\n        \"y\": 71\n      },\n      {\n        \"x\": 77,\n        \"y\": 8\n      },\n      {\n        \"x\": 44,\n        \"y\": 76\n      },\n      {\n        \"x\": 89,\n        \"y\": 37\n      },\n      {\n        \"x\": 55,\n        \"y\": 89\n      },\n      {\n        \"x\": 21,\n        \"y\": 92\n      },\n      {\n        \"x\": 39,\n        \"y\": 88\n      },\n      {\n        \"x\": 70,\n        \"y\": 20\n      },\n      {\n        \"x\": 82,\n        \"y\": 22\n      },\n      {\n        \"x\": 11,\n        \"y\": 78\n      },\n      {\n        \"x\": 19,\n        \"y\": 69\n      },\n      {\n        \"x\": 70,\n        \"y\": 7\n      },\n      {\n        \"x\": 97,\n        \"y\": 17\n      },\n      {\n        \"x\": 19,\n        \"y\": 42\n      },\n      {\n        \"x\": 7,\n        \"y\": 65\n      },\n      {\n        \"x\": 49,\n        \"y\": 101\n      },\n      {\n        \"x\": 65,\n        \"y\": 8\n      },\n      {\n        \"x\": 62,\n        \"y\": 115\n      },\n      {\n        \"x\": 45,\n        \"y\": 69\n      },\n      {\n        \"x\": 42,\n        \"y\": 31\n      },\n      {\n        \"x\": 91,\n        \"y\": 49\n      },\n      {\n        \"x\": 4,\n        \"y\": 113\n      },\n      {\n        \"x\": 41,\n        \"y\": 11\n      },\n      {\n        \"x\": 11,\n        \"y\": 83\n      },\n      {\n        \"x\": 59,\n        \"y\": 112\n      },\n      {\n        \"x\": 72,\n        \"y\": 61\n      },\n      {\n        \"x\": 24,\n        \"y\": 118\n      },\n      {\n        \"x\": 32,\n        \"y\": 65\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 3\",\n    \"data\": [\n      {\n        \"x\": 6,\n        \"y\": 68\n      },\n      {\n        \"x\": 86,\n        \"y\": 35\n      },\n      {\n        \"x\": 61,\n        \"y\": 44\n      },\n      {\n        \"x\": 95,\n        \"y\": 82\n      },\n      {\n        \"x\": 27,\n        \"y\": 48\n      },\n      {\n        \"x\": 31,\n        \"y\": 8\n      },\n      {\n        \"x\": 66,\n        \"y\": 36\n      },\n      {\n        \"x\": 4,\n        \"y\": 90\n      },\n      {\n        \"x\": 93,\n        \"y\": 43\n      },\n      {\n        \"x\": 60,\n        \"y\": 109\n      },\n      {\n        \"x\": 0,\n        \"y\": 26\n      },\n      {\n        \"x\": 53,\n        \"y\": 57\n      },\n      {\n        \"x\": 67,\n        \"y\": 47\n      },\n      {\n        \"x\": 30,\n        \"y\": 33\n      },\n      {\n        \"x\": 14,\n        \"y\": 10\n      },\n      {\n        \"x\": 51,\n        \"y\": 23\n      },\n      {\n        \"x\": 49,\n        \"y\": 43\n      },\n      {\n        \"x\": 7,\n        \"y\": 29\n      },\n      {\n        \"x\": 9,\n        \"y\": 67\n      },\n      {\n        \"x\": 10,\n        \"y\": 82\n      },\n      {\n        \"x\": 81,\n        \"y\": 28\n      },\n      {\n        \"x\": 3,\n        \"y\": 9\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 4\",\n    \"data\": [\n      {\n        \"x\": 21,\n        \"y\": 25\n      },\n      {\n        \"x\": 46,\n        \"y\": 13\n      },\n      {\n        \"x\": 36,\n        \"y\": 11\n      },\n      {\n        \"x\": 45,\n        \"y\": 10\n      },\n      {\n        \"x\": 50,\n        \"y\": 6\n      },\n      {\n        \"x\": 37,\n        \"y\": 52\n      },\n      {\n        \"x\": 18,\n        \"y\": 66\n      },\n      {\n        \"x\": 25,\n        \"y\": 42\n      },\n      {\n        \"x\": 45,\n        \"y\": 13\n      },\n      {\n        \"x\": 35,\n        \"y\": 16\n      },\n      {\n        \"x\": 80,\n        \"y\": 50\n      },\n      {\n        \"x\": 37,\n        \"y\": 146\n      },\n      {\n        \"x\": 22,\n        \"y\": 97\n      },\n      {\n        \"x\": 25,\n        \"y\": 88\n      },\n      {\n        \"x\": 40,\n        \"y\": 51\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 5\",\n    \"data\": [\n      {\n        \"x\": 11,\n        \"y\": 55\n      },\n      {\n        \"x\": 40,\n        \"y\": 10\n      },\n      {\n        \"x\": 68,\n        \"y\": 46\n      },\n      {\n        \"x\": 52,\n        \"y\": 28\n      },\n      {\n        \"x\": 21,\n        \"y\": 78\n      },\n      {\n        \"x\": 79,\n        \"y\": 49\n      },\n      {\n        \"x\": 40,\n        \"y\": 17\n      },\n      {\n        \"x\": 87,\n        \"y\": 14\n      },\n      {\n        \"x\": 29,\n        \"y\": 44\n      },\n      {\n        \"x\": 14,\n        \"y\": 123\n      },\n      {\n        \"x\": 61,\n        \"y\": 31\n      },\n      {\n        \"x\": 111,\n        \"y\": 83\n      },\n      {\n        \"x\": 39,\n        \"y\": 102\n      },\n      {\n        \"x\": 32,\n        \"y\": 81\n      },\n      {\n        \"x\": 14,\n        \"y\": 89\n      },\n      {\n        \"x\": 22,\n        \"y\": 45\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 6\",\n    \"data\": [\n      {\n        \"x\": 11,\n        \"y\": 26\n      },\n      {\n        \"x\": 63,\n        \"y\": 1\n      },\n      {\n        \"x\": 46,\n        \"y\": 11\n      },\n      {\n        \"x\": 42,\n        \"y\": 110\n      },\n      {\n        \"x\": 55,\n        \"y\": 68\n      },\n      {\n        \"x\": 47,\n        \"y\": 62\n      },\n      {\n        \"x\": 18,\n        \"y\": 86\n      },\n      {\n        \"x\": 45,\n        \"y\": 92\n      },\n      {\n        \"x\": 45,\n        \"y\": 113\n      },\n      {\n        \"x\": 55,\n        \"y\": 106\n      },\n      {\n        \"x\": 70,\n        \"y\": 50\n      },\n      {\n        \"x\": 27,\n        \"y\": 106\n      },\n      {\n        \"x\": 52,\n        \"y\": 97\n      },\n      {\n        \"x\": 76,\n        \"y\": 108\n      },\n      {\n        \"x\": 60,\n        \"y\": 81\n      },\n      {\n        \"x\": 113,\n        \"y\": 110\n      },\n      {\n        \"x\": 50,\n        \"y\": 12\n      },\n      {\n        \"x\": 99,\n        \"y\": 51\n      },\n      {\n        \"x\": 35,\n        \"y\": 55\n      },\n      {\n        \"x\": 21,\n        \"y\": 11\n      },\n      {\n        \"x\": 57,\n        \"y\": 17\n      },\n      {\n        \"x\": 121,\n        \"y\": 18\n      },\n      {\n        \"x\": 48,\n        \"y\": 103\n      },\n      {\n        \"x\": 20,\n        \"y\": 59\n      },\n    ]\n  },\n]\n\nclass ScatterplotChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    let colorScale = [];\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n\n      colorScale = this.props.colorScale;\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n\n      // Only pick certain colors if it's the divergent scale\n      if (this.props.colorScale.length == 14) {\n        colorScale.push(this.props.colorScale[0]);\n        colorScale.push(this.props.colorScale[8]);\n        colorScale.push(this.props.colorScale[13]);\n      } else {\n        colorScale = this.props.colorScale;\n      }\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n\n      // Only pick certain colors if it's the divergent scale\n      if (this.props.colorScale.length == 14) {\n        colorScale.push(this.props.colorScale[0]);\n        colorScale.push(this.props.colorScale[3]);\n        colorScale.push(this.props.colorScale[5]);\n        colorScale.push(this.props.colorScale[8])\n        colorScale.push(this.props.colorScale[9]);\n        colorScale.push(this.props.colorScale[13]);\n      } else {\n        colorScale = this.props.colorScale;\n      }\n    }\n\n    return (\n    <>\n      <ResponsiveScatterPlot\n        data={displayData}\n        margin={{ top: 20, right: 140, bottom: 70, left: 90 }}\n        xScale={{ type: 'linear', min: 0, max: 'auto' }}\n        xFormat={function(e){return e+\" kg\"}}\n        yScale={{ type: 'linear', min: 0, max: 'auto' }}\n        yFormat={function(e){return e+\" cm\"}}\n        // colors={colors[this.state.colorScale]}\n        colors={colorScale}\n        blendMode=\"multiply\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: 'bottom',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 46\n        }}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -60\n        }}\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default ScatterplotChart;\n","/Users/Kevin/github/datavis-master/src/components/charts/BarChart.js",["75","76"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveBar } from '@nivo/bar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    id: \"1\",\n    value: 83,\n  },\n  {\n    id: \"2\",\n    value: 83,\n  },\n  {\n    id: \"3\",\n    value: 36,\n  },\n  {\n    id: \"4\",\n    value: 54,\n  },\n  {\n    id: \"5\",\n    value: 13,\n  },\n  {\n    id: \"6\",\n    value: 128,\n  },\n];\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let keys;\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n      keys = [\"1\"];\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n      keys = [\"1\", \"2\", \"3\"];\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n      keys = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n    }\n\n    return (\n    <>\n      <ResponsiveBar\n        data={displayData}\n        margin={{ top: 20, right: 20, bottom: 50, left: 60 }}\n        padding={0.3}\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40,\n          symbolShape: 'circle',\n        }}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default BarChart;\n",["77","78"],"/Users/Kevin/github/datavis-master/src/components/charts/LineChart.js",["79"],"/Users/Kevin/github/datavis-master/src/components/charts/HeatmapChart.js",["80"],"/Users/Kevin/github/datavis-master/src/components/charts/AreaChart.js",["81"],"/Users/Kevin/github/datavis-master/src/components/charts/RadarChart.js",["82","83","84"],"/Users/Kevin/github/datavis-master/src/components/charts/ChartColors.js",[],"/Users/Kevin/github/datavis-master/src/components/charts/GroupedBarChart.js",["85","86","87"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveBar } from '@nivo/bar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    id: \"1\",\n    \"Category\": 83,\n    \"Category 2\": 129,\n    \"Category 3\": 74,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 114,\n  },\n  {\n    id: \"2\",\n    \"Category\": 83,\n    \"Category 2\": 113,\n    \"Category 3\": 131,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 68,\n  },\n  {\n    id: \"3\",\n    \"Category\": 36,\n    \"Category 2\": 53,\n    \"Category 3\": 191,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 134,\n  },\n  {\n    id: \"4\",\n    \"Category\": 54,\n    \"Category 2\": 52,\n    \"Category 3\": 177,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 124,\n  },\n  {\n    id: \"5\",\n    \"Category\": 13,\n    \"Category 2\": 160,\n    \"Category 3\": 188,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 144,\n  },\n  {\n    id: \"6\",\n    \"Category\": 128,\n    \"Category 2\": 34,\n    \"Category 3\": 6,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 154,\n  },\n];\n\nclass GroupedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    let truncatedData = [];\n    let keys;\n\n    if (this.state.seriesScale === 1) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\" ];\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        obj[\"Category 3\"] = displayData[i][\"Category 3\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\", \"Category 3\" ];\n\n    } else if (this.state.seriesScale === 5) {\n      truncatedData = data;\n      keys = [ \"Category\", \"Category 2\", \"Category 3\", \"Category 4\", \"Category 5\" ];\n    }\n\n    return (\n    <>\n      <ResponsiveBar\n        data={truncatedData}\n        keys={keys}\n        margin={{ top: 20, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        innerPadding={2}\n        groupMode=\"grouped\"\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        legends={[\n          {\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default GroupedBarChart;\n","/Users/Kevin/github/datavis-master/src/reportWebVitals.js",[],"/Users/Kevin/github/datavis-master/src/components/Sidebar.js",[],"/Users/Kevin/github/datavis-master/src/index.js",[],{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":103,"column":16,"nodeType":"90","messageId":"94","endLine":103,"endColumn":17},{"ruleId":"92","severity":1,"message":"95","line":104,"column":13,"nodeType":"90","messageId":"94","endLine":104,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":116,"column":16,"nodeType":"90","messageId":"94","endLine":116,"endColumn":17},{"ruleId":"92","severity":1,"message":"95","line":117,"column":13,"nodeType":"90","messageId":"94","endLine":117,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":598,"column":40,"nodeType":"102","messageId":"103","endLine":598,"endColumn":42},{"ruleId":"100","severity":1,"message":"101","line":609,"column":40,"nodeType":"102","messageId":"103","endLine":609,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"104","line":63,"column":7,"nodeType":"90","messageId":"91","endLine":63,"endColumn":11},{"ruleId":"96","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":93,"column":16,"nodeType":"90","messageId":"94","endLine":93,"endColumn":17},{"ruleId":"92","severity":1,"message":"95","line":94,"column":13,"nodeType":"90","messageId":"94","endLine":94,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":4,"column":7,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":102,"column":16,"nodeType":"90","messageId":"94","endLine":102,"endColumn":17},{"ruleId":"92","severity":1,"message":"95","line":103,"column":13,"nodeType":"90","messageId":"94","endLine":103,"endColumn":16},"no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","'obj' is already defined.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'keys' is assigned a value but never used.",["107"],["108"],"no-global-assign","no-unsafe-negation"]