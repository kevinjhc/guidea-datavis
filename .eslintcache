[{"/Users/Kevin/github/datavis-master/src/components/App.js":"1","/Users/Kevin/github/datavis-master/src/components/charts/PieChart.js":"2","/Users/Kevin/github/datavis-master/src/components/charts/ScatterPlotChart.js":"3","/Users/Kevin/github/datavis-master/src/components/charts/ChartColors.js":"4","/Users/Kevin/github/datavis-master/src/components/charts/BarChart.js":"5","/Users/Kevin/github/datavis-master/src/index.js":"6","/Users/Kevin/github/datavis-master/src/components/charts/AreaChart.js":"7","/Users/Kevin/github/datavis-master/src/components/charts/RadarChart.js":"8","/Users/Kevin/github/datavis-master/src/components/charts/StackedBarChart.js":"9","/Users/Kevin/github/datavis-master/src/components/charts/LineChart.js":"10","/Users/Kevin/github/datavis-master/src/components/charts/GroupedBarChart.js":"11","/Users/Kevin/github/datavis-master/src/components/charts/HeatmapChart.js":"12","/Users/Kevin/github/datavis-master/src/components/Sidebar.js":"13","/Users/Kevin/github/datavis-master/src/reportWebVitals.js":"14","/Users/Kevin/github/datavis-master/src/components/charts/ChoroplethChart.js":"15","/Users/Kevin/github/datavis-master/src/components/charts/world_countries.js":"16"},{"size":13634,"mtime":1612795422419,"results":"17","hashOfConfig":"18"},{"size":2673,"mtime":1610979729031,"results":"19","hashOfConfig":"18"},{"size":10591,"mtime":1611176490056,"results":"20","hashOfConfig":"18"},{"size":1451,"mtime":1612805510090,"results":"21","hashOfConfig":"18"},{"size":2419,"mtime":1611175877991,"results":"22","hashOfConfig":"18"},{"size":514,"mtime":1611169736624,"results":"23","hashOfConfig":"18"},{"size":4883,"mtime":1611175936116,"results":"24","hashOfConfig":"18"},{"size":3887,"mtime":1610980262370,"results":"25","hashOfConfig":"18"},{"size":4865,"mtime":1611176732185,"results":"26","hashOfConfig":"18"},{"size":7686,"mtime":1611715196260,"results":"27","hashOfConfig":"18"},{"size":4297,"mtime":1611175868451,"results":"28","hashOfConfig":"18"},{"size":3575,"mtime":1610980283521,"results":"29","hashOfConfig":"18"},{"size":3103,"mtime":1612795433430,"results":"30","hashOfConfig":"18"},{"size":362,"mtime":1608216214000,"results":"31","hashOfConfig":"18"},{"size":9967,"mtime":1611940451725,"results":"32","hashOfConfig":"18"},{"size":998638,"mtime":1611928153787,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xfk9d7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Kevin/github/datavis-master/src/components/App.js",[],"/Users/Kevin/github/datavis-master/src/components/charts/PieChart.js",["81"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsivePie } from '@nivo/pie';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"label\": \"Category 1\",\n    \"value\": 422,\n  },\n  {\n    \"id\": \"Category 2\",\n    \"label\": \"Category 2\",\n    \"value\": 120,\n  },\n  {\n    \"id\": \"Category 3\",\n    \"label\": \"Category 3\",\n    \"value\": 506,\n  },\n  {\n    \"id\": \"Category 4\",\n    \"label\": \"Category 4\",\n    \"value\": 295,\n  },\n  {\n    \"id\": \"Category 5\",\n    \"label\": \"Category 5\",\n    \"value\": 439,\n  },\n  {\n    \"id\": \"Category 6\",\n    \"label\": \"Category 6\",\n    \"value\": 79,\n  }\n\n]\n\nclass PieChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n    }\n\n    return (\n    <>\n      <ResponsivePie\n        data={displayData}\n        margin={{ top: 20, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        radialLabelsSkipAngle={10}\n        radialLabelsLinkColor={{ from: 'color' }}\n        sliceLabelsSkipAngle={10}\n        legends={[\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 56,\n            itemsSpacing: 0,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableSliceLabels={false}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default PieChart;\n",["82","83"],"/Users/Kevin/github/datavis-master/src/components/charts/ScatterPlotChart.js",["84","85","86"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"data\": [\n      {\n        \"x\": 31,\n        \"y\": 26\n      },\n      {\n        \"x\": 66,\n        \"y\": 1\n      },\n      {\n        \"x\": 76,\n        \"y\": 11\n      },\n      {\n        \"x\": 4,\n        \"y\": 110\n      },\n      {\n        \"x\": 5,\n        \"y\": 68\n      },\n      {\n        \"x\": 27,\n        \"y\": 62\n      },\n      {\n        \"x\": 8,\n        \"y\": 86\n      },\n      {\n        \"x\": 85,\n        \"y\": 92\n      },\n      {\n        \"x\": 95,\n        \"y\": 113\n      },\n      {\n        \"x\": 45,\n        \"y\": 106\n      },\n      {\n        \"x\": 60,\n        \"y\": 50\n      },\n      {\n        \"x\": 17,\n        \"y\": 106\n      },\n      {\n        \"x\": 82,\n        \"y\": 97\n      },\n      {\n        \"x\": 26,\n        \"y\": 108\n      },\n      {\n        \"x\": 50,\n        \"y\": 81\n      },\n      {\n        \"x\": 13,\n        \"y\": 110\n      },\n      {\n        \"x\": 100,\n        \"y\": 12\n      },\n      {\n        \"x\": 69,\n        \"y\": 51\n      },\n      {\n        \"x\": 25,\n        \"y\": 55\n      },\n      {\n        \"x\": 91,\n        \"y\": 11\n      },\n      {\n        \"x\": 47,\n        \"y\": 17\n      },\n      {\n        \"x\": 21,\n        \"y\": 18\n      },\n      {\n        \"x\": 58,\n        \"y\": 103\n      },\n      {\n        \"x\": 100,\n        \"y\": 59\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 2\",\n    \"data\": [\n      {\n        \"x\": 1,\n        \"y\": 52\n      },\n      {\n        \"x\": 44,\n        \"y\": 100\n      },\n      {\n        \"x\": 63,\n        \"y\": 6\n      },\n      {\n        \"x\": 81,\n        \"y\": 71\n      },\n      {\n        \"x\": 77,\n        \"y\": 8\n      },\n      {\n        \"x\": 44,\n        \"y\": 76\n      },\n      {\n        \"x\": 89,\n        \"y\": 37\n      },\n      {\n        \"x\": 55,\n        \"y\": 89\n      },\n      {\n        \"x\": 21,\n        \"y\": 92\n      },\n      {\n        \"x\": 39,\n        \"y\": 88\n      },\n      {\n        \"x\": 70,\n        \"y\": 20\n      },\n      {\n        \"x\": 82,\n        \"y\": 22\n      },\n      {\n        \"x\": 11,\n        \"y\": 78\n      },\n      {\n        \"x\": 19,\n        \"y\": 69\n      },\n      {\n        \"x\": 70,\n        \"y\": 7\n      },\n      {\n        \"x\": 97,\n        \"y\": 17\n      },\n      {\n        \"x\": 19,\n        \"y\": 42\n      },\n      {\n        \"x\": 7,\n        \"y\": 65\n      },\n      {\n        \"x\": 49,\n        \"y\": 101\n      },\n      {\n        \"x\": 65,\n        \"y\": 8\n      },\n      {\n        \"x\": 62,\n        \"y\": 115\n      },\n      {\n        \"x\": 45,\n        \"y\": 69\n      },\n      {\n        \"x\": 42,\n        \"y\": 31\n      },\n      {\n        \"x\": 91,\n        \"y\": 49\n      },\n      {\n        \"x\": 4,\n        \"y\": 113\n      },\n      {\n        \"x\": 41,\n        \"y\": 11\n      },\n      {\n        \"x\": 11,\n        \"y\": 83\n      },\n      {\n        \"x\": 59,\n        \"y\": 112\n      },\n      {\n        \"x\": 72,\n        \"y\": 61\n      },\n      {\n        \"x\": 24,\n        \"y\": 118\n      },\n      {\n        \"x\": 32,\n        \"y\": 65\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 3\",\n    \"data\": [\n      {\n        \"x\": 6,\n        \"y\": 68\n      },\n      {\n        \"x\": 86,\n        \"y\": 35\n      },\n      {\n        \"x\": 61,\n        \"y\": 44\n      },\n      {\n        \"x\": 95,\n        \"y\": 82\n      },\n      {\n        \"x\": 27,\n        \"y\": 48\n      },\n      {\n        \"x\": 31,\n        \"y\": 8\n      },\n      {\n        \"x\": 66,\n        \"y\": 36\n      },\n      {\n        \"x\": 4,\n        \"y\": 90\n      },\n      {\n        \"x\": 93,\n        \"y\": 43\n      },\n      {\n        \"x\": 60,\n        \"y\": 109\n      },\n      {\n        \"x\": 0,\n        \"y\": 26\n      },\n      {\n        \"x\": 53,\n        \"y\": 57\n      },\n      {\n        \"x\": 67,\n        \"y\": 47\n      },\n      {\n        \"x\": 30,\n        \"y\": 33\n      },\n      {\n        \"x\": 14,\n        \"y\": 10\n      },\n      {\n        \"x\": 51,\n        \"y\": 23\n      },\n      {\n        \"x\": 49,\n        \"y\": 43\n      },\n      {\n        \"x\": 7,\n        \"y\": 29\n      },\n      {\n        \"x\": 9,\n        \"y\": 67\n      },\n      {\n        \"x\": 10,\n        \"y\": 82\n      },\n      {\n        \"x\": 81,\n        \"y\": 28\n      },\n      {\n        \"x\": 3,\n        \"y\": 9\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 4\",\n    \"data\": [\n      {\n        \"x\": 21,\n        \"y\": 25\n      },\n      {\n        \"x\": 46,\n        \"y\": 13\n      },\n      {\n        \"x\": 36,\n        \"y\": 11\n      },\n      {\n        \"x\": 45,\n        \"y\": 10\n      },\n      {\n        \"x\": 50,\n        \"y\": 6\n      },\n      {\n        \"x\": 37,\n        \"y\": 52\n      },\n      {\n        \"x\": 18,\n        \"y\": 66\n      },\n      {\n        \"x\": 25,\n        \"y\": 42\n      },\n      {\n        \"x\": 45,\n        \"y\": 13\n      },\n      {\n        \"x\": 35,\n        \"y\": 16\n      },\n      {\n        \"x\": 80,\n        \"y\": 50\n      },\n      {\n        \"x\": 37,\n        \"y\": 146\n      },\n      {\n        \"x\": 22,\n        \"y\": 97\n      },\n      {\n        \"x\": 25,\n        \"y\": 88\n      },\n      {\n        \"x\": 40,\n        \"y\": 51\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 5\",\n    \"data\": [\n      {\n        \"x\": 11,\n        \"y\": 55\n      },\n      {\n        \"x\": 40,\n        \"y\": 10\n      },\n      {\n        \"x\": 68,\n        \"y\": 46\n      },\n      {\n        \"x\": 52,\n        \"y\": 28\n      },\n      {\n        \"x\": 21,\n        \"y\": 78\n      },\n      {\n        \"x\": 79,\n        \"y\": 49\n      },\n      {\n        \"x\": 40,\n        \"y\": 17\n      },\n      {\n        \"x\": 87,\n        \"y\": 14\n      },\n      {\n        \"x\": 29,\n        \"y\": 44\n      },\n      {\n        \"x\": 14,\n        \"y\": 123\n      },\n      {\n        \"x\": 61,\n        \"y\": 31\n      },\n      {\n        \"x\": 111,\n        \"y\": 83\n      },\n      {\n        \"x\": 39,\n        \"y\": 102\n      },\n      {\n        \"x\": 32,\n        \"y\": 81\n      },\n      {\n        \"x\": 14,\n        \"y\": 89\n      },\n      {\n        \"x\": 22,\n        \"y\": 45\n      }\n    ]\n  },\n  {\n    \"id\": \"Category 6\",\n    \"data\": [\n      {\n        \"x\": 11,\n        \"y\": 26\n      },\n      {\n        \"x\": 63,\n        \"y\": 1\n      },\n      {\n        \"x\": 46,\n        \"y\": 11\n      },\n      {\n        \"x\": 42,\n        \"y\": 110\n      },\n      {\n        \"x\": 55,\n        \"y\": 68\n      },\n      {\n        \"x\": 47,\n        \"y\": 62\n      },\n      {\n        \"x\": 18,\n        \"y\": 86\n      },\n      {\n        \"x\": 45,\n        \"y\": 92\n      },\n      {\n        \"x\": 45,\n        \"y\": 113\n      },\n      {\n        \"x\": 55,\n        \"y\": 106\n      },\n      {\n        \"x\": 70,\n        \"y\": 50\n      },\n      {\n        \"x\": 27,\n        \"y\": 106\n      },\n      {\n        \"x\": 52,\n        \"y\": 97\n      },\n      {\n        \"x\": 76,\n        \"y\": 108\n      },\n      {\n        \"x\": 60,\n        \"y\": 81\n      },\n      {\n        \"x\": 113,\n        \"y\": 110\n      },\n      {\n        \"x\": 50,\n        \"y\": 12\n      },\n      {\n        \"x\": 99,\n        \"y\": 51\n      },\n      {\n        \"x\": 35,\n        \"y\": 55\n      },\n      {\n        \"x\": 21,\n        \"y\": 11\n      },\n      {\n        \"x\": 57,\n        \"y\": 17\n      },\n      {\n        \"x\": 121,\n        \"y\": 18\n      },\n      {\n        \"x\": 48,\n        \"y\": 103\n      },\n      {\n        \"x\": 20,\n        \"y\": 59\n      },\n    ]\n  },\n]\n\nclass ScatterplotChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    let colorScale = [];\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n\n      colorScale = this.props.colorScale;\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n\n      // Only pick certain colors if it's the divergent scale\n      if (this.props.colorScale.length == 14) {\n        colorScale.push(this.props.colorScale[0]);\n        colorScale.push(this.props.colorScale[8]);\n        colorScale.push(this.props.colorScale[13]);\n      } else {\n        colorScale = this.props.colorScale;\n      }\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n\n      // Only pick certain colors if it's the divergent scale\n      if (this.props.colorScale.length == 14) {\n        colorScale.push(this.props.colorScale[0]);\n        colorScale.push(this.props.colorScale[3]);\n        colorScale.push(this.props.colorScale[5]);\n        colorScale.push(this.props.colorScale[8])\n        colorScale.push(this.props.colorScale[9]);\n        colorScale.push(this.props.colorScale[13]);\n      } else {\n        colorScale = this.props.colorScale;\n      }\n    }\n\n    return (\n    <>\n      <ResponsiveScatterPlot\n        data={displayData}\n        margin={{ top: 20, right: 140, bottom: 70, left: 90 }}\n        xScale={{ type: 'linear', min: 0, max: 'auto' }}\n        xFormat={function(e){return e+\" kg\"}}\n        yScale={{ type: 'linear', min: 0, max: 'auto' }}\n        yFormat={function(e){return e+\" cm\"}}\n        // colors={colors[this.state.colorScale]}\n        colors={colorScale}\n        blendMode=\"multiply\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: 'bottom',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 46\n        }}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -60\n        }}\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default ScatterplotChart;\n",["87","88"],"/Users/Kevin/github/datavis-master/src/components/charts/ChartColors.js",[],"/Users/Kevin/github/datavis-master/src/components/charts/BarChart.js",["89","90"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveBar } from '@nivo/bar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    id: \"1\",\n    value: 83,\n  },\n  {\n    id: \"2\",\n    value: 83,\n  },\n  {\n    id: \"3\",\n    value: 36,\n  },\n  {\n    id: \"4\",\n    value: 54,\n  },\n  {\n    id: \"5\",\n    value: 13,\n  },\n  {\n    id: \"6\",\n    value: 128,\n  },\n];\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let keys;\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n      keys = [\"1\"];\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n      keys = [\"1\", \"2\", \"3\"];\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n      keys = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n    }\n\n    return (\n    <>\n      <ResponsiveBar\n        data={displayData}\n        margin={{ top: 20, right: 20, bottom: 50, left: 60 }}\n        padding={0.3}\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40,\n          symbolShape: 'circle',\n        }}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default BarChart;\n","/Users/Kevin/github/datavis-master/src/index.js",[],["91","92"],"/Users/Kevin/github/datavis-master/src/components/charts/AreaChart.js",["93"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveLine } from '@nivo/line';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 47\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 276\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 8\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 174\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 284\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 2\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 269\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 109\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 146\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 157\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 225\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 248\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 3\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 9\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 185\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 4\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 236\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 177\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 73\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 4\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 47\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 276\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 8\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 174\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 284\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 5\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 47\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 276\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 8\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 174\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 284\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 6\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 47\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 276\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 8\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 174\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 284\n      },\n    ]\n  },\n];\n\nclass AreaChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n    } else if (this.state.seriesScale === 5) {\n      displayData = data;\n    }\n\n    return (\n    <>\n    <ResponsiveLine\n      data={displayData}\n      margin={{ top: 20, right: 110, bottom: 50, left: 60 }}\n      xScale={{ type: 'point' }}\n      yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n      yFormat=\" >-.2f\"\n      // colors={colors[this.state.colorScale]}\n      colors={this.state.colorScale}\n      axisTop={null}\n      axisRight={null}\n      enableArea={true}\n      axisBottom={{\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'X-axis',\n        legendOffset: 36,\n        legendPosition: 'middle'\n      }}\n      axisLeft={{\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Y-axis',\n        legendOffset: -40,\n        legendPosition: 'middle'\n      }}\n      pointSize={6}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: 'serieColor' }}\n      pointLabelYOffset={-12}\n      legends={[\n        {\n          anchor: 'bottom-right',\n          direction: 'column',\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemDirection: 'left-to-right',\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: 'circle',\n        }\n      ]}\n      enableLabel={false}\n      isInteractive={false}\n      theme={{\n        textColor: this.state.textColor,\n        axis: {\n          ticks: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            },\n          },\n        },\n        grid: {\n          line: {\n            stroke: chroma(this.state.textColor).alpha(.2).hex()\n          }\n        }\n      }}\n    />\n    </>\n        );\n  }\n}\n\nexport default AreaChart;\n",["94","95"],"/Users/Kevin/github/datavis-master/src/components/charts/RadarChart.js",["96","97","98"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveRadar } from '@nivo/radar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"attribute\": \"Attribute 1\",\n    \"Category\": 64,\n    \"Category 2\": 73,\n    \"Category 3\": 57,\n    \"Category 4\": 57,\n    \"Category 5\": 57,\n    \"Category 6\": 57,\n  },\n  {\n    \"attribute\": \"Attribute 2\",\n    \"Category\": 20,\n    \"Category 2\": 94,\n    \"Category 3\": 102,\n    \"Category 4\": 57,\n    \"Category 5\": 57,\n    \"Category 6\": 57,\n  },\n  {\n    \"attribute\": \"Attribute 3\",\n    \"Category\": 41,\n    \"Category 2\": 21,\n    \"Category 3\": 106,\n    \"Category 4\": 57,\n    \"Category 5\": 57,\n    \"Category 6\": 57,\n  },\n  {\n    \"attribute\": \"Attribute 4\",\n    \"Category\": 53,\n    \"Category 2\": 78,\n    \"Category 3\": 105,\n    \"Category 4\": 57,\n    \"Category 5\": 57,\n    \"Category 6\": 57,\n  },\n  {\n    \"attribute\": \"Attribute 5\",\n    \"Category\": 86,\n    \"Category 2\": 39,\n    \"Category 3\": 48,\n    \"Category 4\": 57,\n    \"Category 5\": 57,\n    \"Category 6\": 57,\n  },\n]\n\nclass RadarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n\n    let displayData;\n    let truncatedData = [];\n    let keys;\n\n    if (this.state.seriesScale === 1) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"attribute\"] = \"Attribute \" + i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\" ];\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"attribute\"] = \"Attribute \" + i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        obj[\"Category 3\"] = displayData[i][\"Category 3\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\", \"Category 3\" ];\n\n    } else if (this.state.seriesScale === 5) {\n      truncatedData = data;\n      keys = [ \"Category\", \"Category 2\", \"Category 3\", \"Category 4\", \"Category 5\", \"Category 6\" ];\n    }\n\n    return (\n    <>\n    <ResponsiveRadar\n        data={truncatedData}\n        keys={keys}\n        indexBy=\"attribute\"\n        maxValue=\"auto\"\n        margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n        borderWidth={2}\n        borderColor={{ from: 'color' }}\n        gridLevels={5}\n        gridShape=\"circular\"\n        gridLabelOffset={36}\n        enableDots={true}\n        dotSize={10}\n        dotBorderWidth={2}\n        dotBorderColor={{ from: 'color' }}\n        enableDotLabel={false}\n        colors={this.state.colorScale}\n        blendMode=\"multiply\"\n        enableLabel={false}\n        isInteractive={false}\n        legends={[\n          {\n            anchor: 'top-left',\n            direction: 'column',\n            translateX: -50,\n            translateY: -40,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n    />\n    </>\n        );\n  }\n}\n\nexport default RadarChart;\n","/Users/Kevin/github/datavis-master/src/components/charts/StackedBarChart.js",["99","100","101","102","103"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveBar } from '@nivo/bar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    id: \"1\",\n    \"Category\": 83,\n    \"Category 2\": 129,\n    \"Category 3\": 74,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 114,\n  },\n  {\n    id: \"2\",\n    \"Category\": 83,\n    \"Category 2\": 113,\n    \"Category 3\": 131,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 68,\n  },\n  {\n    id: \"3\",\n    \"Category\": 36,\n    \"Category 2\": 53,\n    \"Category 3\": 191,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 134,\n  },\n  {\n    id: \"4\",\n    \"Category\": 54,\n    \"Category 2\": 52,\n    \"Category 3\": 177,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 124,\n  },\n  {\n    id: \"5\",\n    \"Category\": 13,\n    \"Category 2\": 160,\n    \"Category 3\": 188,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 144,\n  },\n  {\n    id: \"6\",\n    \"Category\": 128,\n    \"Category 2\": 34,\n    \"Category 3\": 6,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 154,\n  },\n];\n\nclass StackedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n\n    let displayData;\n    let truncatedData = [];\n    let keys;\n\n    if (this.state.seriesScale === 1) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\" ];\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        obj[\"Category 3\"] = displayData[i][\"Category 3\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\", \"Category 3\" ];\n\n    } else if (this.state.seriesScale === 4) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        obj[\"Category 3\"] = displayData[i][\"Category 3\"];\n        obj[\"Category 4\"] = displayData[i][\"Category 4\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\", \"Category 3\", \"Category 4\" ];\n\n    } else if (this.state.seriesScale === 5) {\n      truncatedData = data;\n      keys = [ \"Category\", \"Category 2\", \"Category 3\", \"Category 4\", \"Category 5\" ];\n    }\n\n    return (\n    <>\n      <ResponsiveBar\n        data={truncatedData}\n        keys={keys}\n        margin={{ top: 20, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        innerPadding={1}\n        colors={this.state.colorScale}\n        // colors={{ scheme: 'blues' }}\n        valueScale={{ type: 'linear' }}\n        // indexScale={{ type: 'band', round: true }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        legends={[\n          {\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default StackedBarChart;\n",["104","105"],"/Users/Kevin/github/datavis-master/src/components/charts/LineChart.js",["106"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveLine } from '@nivo/line';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    \"id\": \"Category 1\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 47\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 276\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 8\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 174\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 284\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 2\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 269\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 109\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 146\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 157\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 225\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 248\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 3\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 9\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 185\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 4\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 236\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 177\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 73\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 4\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 37\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 56\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 93\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 123\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 34\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 74\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 5\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 11\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 69\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 24\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 211\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 123\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 34\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 6\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 213\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 172\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 42\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 235\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 23\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 45\n      },\n    ]\n  },\n\n  {\n    \"id\": \"Category 7\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 107\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 76\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 38\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 56\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 14\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 84\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 8\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 33\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 55\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 11\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 76\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 42\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 34\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 9\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 40\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 75\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 219\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 44\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 55\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 11\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 10\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 42\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 115\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 33\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 67\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 67\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 177\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 11\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 27\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 224\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 14\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 42\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 53\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 35\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 12\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 147\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 76\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 83\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 156\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 14\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 233\n      },\n    ]\n  },\n  {\n    \"id\": \"Category 13\",\n    \"data\": [\n      {\n        \"x\": \"1\",\n        \"y\": 180\n      },\n      {\n        \"x\": \"2\",\n        \"y\": 25\n      },\n      {\n        \"x\": \"3\",\n        \"y\": 120\n      },\n      {\n        \"x\": \"4\",\n        \"y\": 100\n      },\n      {\n        \"x\": \"5\",\n        \"y\": 95\n      },\n      {\n        \"x\": \"6\",\n        \"y\": 150\n      },\n    ]\n  },\n];\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    if (this.state.seriesScale === 1) {\n      displayData = data.slice(0, 1);\n    } else if (this.state.seriesScale === 3) {\n      displayData = data.slice(0, 3);\n    } else if (this.state.seriesScale === 5) {\n      displayData = data.slice(0, 5);\n    } else if (this.state.seriesScale === 10) {\n      displayData = data.slice(0, 10);\n    } else if (this.state.seriesScale === 12) {\n      displayData = data;\n    }\n\n    return (\n\n    <>\n      <ResponsiveLine\n        data={displayData}\n        margin={{ top: 20, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n        yFormat=\" >-.2f\"\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: 'bottom',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendOffset: 36,\n          legendPosition: 'middle'\n        }}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendOffset: -40,\n          legendPosition: 'middle'\n        }}\n        pointSize={6}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        legends={[\n          {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default LineChart;\n","/Users/Kevin/github/datavis-master/src/components/charts/GroupedBarChart.js",["107","108","109"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveBar } from '@nivo/bar';\nconst colors = require('./ChartColors.js');\n\nlet data = [\n  {\n    id: \"1\",\n    \"Category\": 83,\n    \"Category 2\": 129,\n    \"Category 3\": 74,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 114,\n  },\n  {\n    id: \"2\",\n    \"Category\": 83,\n    \"Category 2\": 113,\n    \"Category 3\": 131,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 68,\n  },\n  {\n    id: \"3\",\n    \"Category\": 36,\n    \"Category 2\": 53,\n    \"Category 3\": 191,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 134,\n  },\n  {\n    id: \"4\",\n    \"Category\": 54,\n    \"Category 2\": 52,\n    \"Category 3\": 177,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 124,\n  },\n  {\n    id: \"5\",\n    \"Category\": 13,\n    \"Category 2\": 160,\n    \"Category 3\": 188,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 144,\n  },\n  {\n    id: \"6\",\n    \"Category\": 128,\n    \"Category 2\": 34,\n    \"Category 3\": 6,\n    \"Category 4\": 74,\n    \"Category 5\": 74,\n    \"Category 6\": 154,\n  },\n];\n\nclass GroupedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    let displayData;\n    let truncatedData = [];\n    let keys;\n\n    if (this.state.seriesScale === 1) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\" ];\n\n    } else if (this.state.seriesScale === 3) {\n      displayData = data;\n\n      for (var i = 0; i < displayData.length; i++){\n        var obj = {}\n        obj[\"id\"] = i;\n        obj[\"Category\"] = displayData[i][\"Category\"];\n        obj[\"Category 2\"] = displayData[i][\"Category 2\"];\n        obj[\"Category 3\"] = displayData[i][\"Category 3\"];\n        truncatedData.push(obj);\n      }\n      keys = [ \"Category\", \"Category 2\", \"Category 3\" ];\n\n    } else if (this.state.seriesScale === 5) {\n      truncatedData = data;\n      keys = [ \"Category\", \"Category 2\", \"Category 3\", \"Category 4\", \"Category 5\" ];\n    }\n\n    return (\n    <>\n      <ResponsiveBar\n        data={truncatedData}\n        keys={keys}\n        margin={{ top: 20, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        innerPadding={2}\n        groupMode=\"grouped\"\n        // colors={colors[this.state.colorScale]}\n        colors={this.state.colorScale}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'X-axis',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        legends={[\n          {\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n          }\n        ]}\n        enableLabel={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default GroupedBarChart;\n","/Users/Kevin/github/datavis-master/src/components/charts/HeatmapChart.js",["110"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveHeatMap } from '@nivo/heatmap';\nconst colors = require('./ChartColors.js');\n\nconst data = [\n  {\n    \"country\": \"1\",\n    \"Key 1\": 78,\n    \"Key 2\": 18,\n    \"Key 3\": 26,\n    \"Key 4\": 64,\n    \"Key 5\": 71,\n    \"Key 6\": 43,\n    \"Key 7\": 85,\n    \"Key 8\": 43,\n    \"Key 9\": 32,\n    \"Key 10\": 38,\n  },\n  {\n    \"country\": \"2\",\n    \"Key 1\": 49,\n    \"Key 2\": 59,\n    \"Key 3\": 61,\n    \"Key 4\": 64,\n    \"Key 5\": 90,\n    \"Key 6\": 64,\n    \"Key 7\": 50,\n    \"Key 8\": 94,\n    \"Key 9\": 30,\n    \"Key 10\": 20,\n  },\n  {\n    \"country\": \"3\",\n    \"Key 1\": 66,\n    \"Key 2\": 5,\n    \"Key 3\": 18,\n    \"Key 4\": 10,\n    \"Key 5\": 44,\n    \"Key 6\": 57,\n    \"Key 7\": 95,\n    \"Key 8\": 79,\n    \"Key 9\": 70,\n    \"Key 10\": 9,\n  },\n  {\n    \"country\": \"4\",\n    \"Key 1\": 70,\n    \"Key 2\": 61,\n    \"Key 3\": 17,\n    \"Key 4\": 56,\n    \"Key 5\": 53,\n    \"Key 6\": 10,\n    \"Key 7\": 71,\n    \"Key 8\": 2,\n    \"Key 9\": 89,\n    \"Key 10\": 26,\n  },\n  {\n    \"country\": \"5\",\n    \"Key 1\": 16,\n    \"Key 2\": 34,\n    \"Key 3\": 89,\n    \"Key 4\": 75,\n    \"Key 5\": 98,\n    \"Key 6\": 1,\n    \"Key 7\": 84,\n    \"Key 8\": 26,\n    \"Key 9\": 38,\n    \"Key 10\": 81,\n  },\n  {\n    \"country\": \"6\",\n    \"Key 1\": 46,\n    \"Key 2\": 48,\n    \"Key 3\": 57,\n    \"Key 4\": 33,\n    \"Key 5\": 93,\n    \"Key 6\": 89,\n    \"Key 7\": 1,\n    \"Key 8\": 13,\n    \"Key 9\": 32,\n    \"Key 10\": 21,\n  },\n  {\n    \"country\": \"7\",\n    \"Key 1\": 9,\n    \"Key 2\": 27,\n    \"Key 3\": 30,\n    \"Key 4\": 47,\n    \"Key 5\": 19,\n    \"Key 6\": 49,\n    \"Key 7\": 86,\n    \"Key 8\": 58,\n    \"Key 9\": 76,\n    \"Key 10\": 21,\n  },\n  {\n    \"country\": \"8\",\n    \"Key 1\": 40,\n    \"Key 2\": 81,\n    \"Key 3\": 52,\n    \"Key 4\": 92,\n    \"Key 5\": 99,\n    \"Key 6\": 40,\n    \"Key 7\": 81,\n    \"Key 8\": 17,\n    \"Key 9\": 76,\n    \"Key 10\": 94,\n  },\n]\n\nclass HeatmapChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n    });\n  }\n\n  render() {\n    return (\n    <>\n      <ResponsiveHeatMap\n        data={data}\n        keys={[\n            'Key 1',\n            'Key 2',\n            'Key 3',\n            'Key 4',\n            'Key 5',\n            'Key 6',\n            'Key 7',\n            'Key 8',\n            'Key 9',\n            'Key 10',\n        ]}\n        indexBy=\"country\"\n        colors={this.state.colorScale}\n        margin={{ top: 50, right: 60, bottom: 60, left: 60 }}\n        padding={2}\n        axisTop={{ orient: 'top', tickSize: 5, tickPadding: 5, tickRotation: -90, legend: '', legendOffset: 36 }}\n        axisRight={null}\n        axisBottom={null}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Y-axis',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        cellOpacity={1}\n        cellBorderColor={{ from: 'color', modifiers: [ [ 'darker', 0.4 ] ] }}\n        enableLabels={false}\n        isInteractive={false}\n        theme={{\n          textColor: this.state.textColor,\n          axis: {\n            ticks: {\n              line: {\n                stroke: chroma(this.state.textColor).alpha(.2).hex()\n              },\n            },\n          },\n          grid: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            }\n          }\n        }}\n      />\n    </>\n  );\n  }\n}\n\nexport default HeatmapChart;\n","/Users/Kevin/github/datavis-master/src/components/Sidebar.js",[],"/Users/Kevin/github/datavis-master/src/reportWebVitals.js",[],"/Users/Kevin/github/datavis-master/src/components/charts/ChoroplethChart.js",["111"],"import React, { Component } from 'react';\nimport chroma from 'chroma-js';\nimport { ResponsiveChoropleth } from '@nivo/geo';\nconst colors = require('./ChartColors.js');\nconst countries = require('./world_countries.js');\n\nlet data = [\n  {\n    \"id\": \"AFG\",\n    \"value\": 957921\n  },\n  {\n    \"id\": \"AGO\",\n    \"value\": 951413\n  },\n  {\n    \"id\": \"ALB\",\n    \"value\": 90819\n  },\n  {\n    \"id\": \"ARE\",\n    \"value\": 696017\n  },\n  {\n    \"id\": \"ARG\",\n    \"value\": 672951\n  },\n  {\n    \"id\": \"ARM\",\n    \"value\": 532241\n  },\n  {\n    \"id\": \"ATA\",\n    \"value\": 849262\n  },\n  {\n    \"id\": \"ATF\",\n    \"value\": 522874\n  },\n  {\n    \"id\": \"AUT\",\n    \"value\": 28733\n  },\n  {\n    \"id\": \"AZE\",\n    \"value\": 120470\n  },\n  {\n    \"id\": \"BDI\",\n    \"value\": 909747\n  },\n  {\n    \"id\": \"BEL\",\n    \"value\": 367187\n  },\n  {\n    \"id\": \"BEN\",\n    \"value\": 344994\n  },\n  {\n    \"id\": \"BFA\",\n    \"value\": 970642\n  },\n  {\n    \"id\": \"BGD\",\n    \"value\": 322806\n  },\n  {\n    \"id\": \"BGR\",\n    \"value\": 770389\n  },\n  {\n    \"id\": \"BHS\",\n    \"value\": 690035\n  },\n  {\n    \"id\": \"BIH\",\n    \"value\": 753223\n  },\n  {\n    \"id\": \"BLR\",\n    \"value\": 67942\n  },\n  {\n    \"id\": \"BLZ\",\n    \"value\": 872839\n  },\n  {\n    \"id\": \"BOL\",\n    \"value\": 474835\n  },\n  {\n    \"id\": \"BRN\",\n    \"value\": 367548\n  },\n  {\n    \"id\": \"BTN\",\n    \"value\": 83449\n  },\n  {\n    \"id\": \"BWA\",\n    \"value\": 509408\n  },\n  {\n    \"id\": \"CAF\",\n    \"value\": 887140\n  },\n  {\n    \"id\": \"CAN\",\n    \"value\": 977856\n  },\n  {\n    \"id\": \"CHE\",\n    \"value\": 470032\n  },\n  {\n    \"id\": \"CHL\",\n    \"value\": 355382\n  },\n  {\n    \"id\": \"CHN\",\n    \"value\": 772698\n  },\n  {\n    \"id\": \"CIV\",\n    \"value\": 917879\n  },\n  {\n    \"id\": \"CMR\",\n    \"value\": 776644\n  },\n  {\n    \"id\": \"COG\",\n    \"value\": 582891\n  },\n  {\n    \"id\": \"COL\",\n    \"value\": 195127\n  },\n  {\n    \"id\": \"CRI\",\n    \"value\": 354551\n  },\n  {\n    \"id\": \"CUB\",\n    \"value\": 213244\n  },\n  {\n    \"id\": \"-99\",\n    \"value\": 565645\n  },\n  {\n    \"id\": \"CYP\",\n    \"value\": 161247\n  },\n  {\n    \"id\": \"CZE\",\n    \"value\": 133147\n  },\n  {\n    \"id\": \"DEU\",\n    \"value\": 500935\n  },\n  {\n    \"id\": \"DJI\",\n    \"value\": 46415\n  },\n  {\n    \"id\": \"DNK\",\n    \"value\": 613894\n  },\n  {\n    \"id\": \"DOM\",\n    \"value\": 843459\n  },\n  {\n    \"id\": \"DZA\",\n    \"value\": 655983\n  },\n  {\n    \"id\": \"ECU\",\n    \"value\": 301822\n  },\n  {\n    \"id\": \"EGY\",\n    \"value\": 595808\n  },\n  {\n    \"id\": \"ERI\",\n    \"value\": 897594\n  },\n  {\n    \"id\": \"ESP\",\n    \"value\": 285699\n  },\n  {\n    \"id\": \"EST\",\n    \"value\": 249148\n  },\n  {\n    \"id\": \"ETH\",\n    \"value\": 963476\n  },\n  {\n    \"id\": \"FIN\",\n    \"value\": 370212\n  },\n  {\n    \"id\": \"FJI\",\n    \"value\": 535706\n  },\n  {\n    \"id\": \"FLK\",\n    \"value\": 372931\n  },\n  {\n    \"id\": \"FRA\",\n    \"value\": 923505\n  },\n  {\n    \"id\": \"GAB\",\n    \"value\": 257525\n  },\n  {\n    \"id\": \"GBR\",\n    \"value\": 390587\n  },\n  {\n    \"id\": \"GEO\",\n    \"value\": 48518\n  },\n  {\n    \"id\": \"GHA\",\n    \"value\": 847322\n  },\n  {\n    \"id\": \"GIN\",\n    \"value\": 449631\n  },\n  {\n    \"id\": \"GMB\",\n    \"value\": 370213\n  },\n  {\n    \"id\": \"GNB\",\n    \"value\": 902569\n  },\n  {\n    \"id\": \"GNQ\",\n    \"value\": 431289\n  },\n  {\n    \"id\": \"GRC\",\n    \"value\": 458111\n  },\n  {\n    \"id\": \"GTM\",\n    \"value\": 669520\n  },\n  {\n    \"id\": \"GUY\",\n    \"value\": 978526\n  },\n  {\n    \"id\": \"HND\",\n    \"value\": 140847\n  },\n  {\n    \"id\": \"HRV\",\n    \"value\": 517644\n  },\n  {\n    \"id\": \"HTI\",\n    \"value\": 252498\n  },\n  {\n    \"id\": \"HUN\",\n    \"value\": 530213\n  },\n  {\n    \"id\": \"IDN\",\n    \"value\": 198903\n  },\n  {\n    \"id\": \"IND\",\n    \"value\": 420748\n  },\n  {\n    \"id\": \"IRL\",\n    \"value\": 27665\n  },\n  {\n    \"id\": \"IRN\",\n    \"value\": 481588\n  },\n  {\n    \"id\": \"IRQ\",\n    \"value\": 909885\n  },\n  {\n    \"id\": \"ISL\",\n    \"value\": 799820\n  },\n  {\n    \"id\": \"ISR\",\n    \"value\": 353067\n  },\n  {\n    \"id\": \"ITA\",\n    \"value\": 562895\n  },\n  {\n    \"id\": \"JAM\",\n    \"value\": 193544\n  },\n  {\n    \"id\": \"JOR\",\n    \"value\": 557351\n  },\n  {\n    \"id\": \"JPN\",\n    \"value\": 260174\n  },\n  {\n    \"id\": \"KAZ\",\n    \"value\": 335020\n  },\n  {\n    \"id\": \"KEN\",\n    \"value\": 414504\n  },\n  {\n    \"id\": \"KGZ\",\n    \"value\": 285890\n  },\n  {\n    \"id\": \"KHM\",\n    \"value\": 396193\n  },\n  {\n    \"id\": \"OSA\",\n    \"value\": 525938\n  },\n  {\n    \"id\": \"KWT\",\n    \"value\": 103154\n  },\n  {\n    \"id\": \"LAO\",\n    \"value\": 173441\n  },\n  {\n    \"id\": \"LBN\",\n    \"value\": 390685\n  },\n  {\n    \"id\": \"LBR\",\n    \"value\": 894038\n  },\n  {\n    \"id\": \"LBY\",\n    \"value\": 797869\n  },\n  {\n    \"id\": \"LKA\",\n    \"value\": 364245\n  },\n  {\n    \"id\": \"LSO\",\n    \"value\": 131969\n  },\n  {\n    \"id\": \"LTU\",\n    \"value\": 67277\n  },\n  {\n    \"id\": \"LUX\",\n    \"value\": 368296\n  },\n  {\n    \"id\": \"LVA\",\n    \"value\": 374161\n  },\n  {\n    \"id\": \"MAR\",\n    \"value\": 93826\n  },\n  {\n    \"id\": \"MDA\",\n    \"value\": 280940\n  },\n  {\n    \"id\": \"MDG\",\n    \"value\": 630251\n  },\n  {\n    \"id\": \"MEX\",\n    \"value\": 636599\n  },\n  {\n    \"id\": \"MKD\",\n    \"value\": 77574\n  },\n  {\n    \"id\": \"MLI\",\n    \"value\": 946358\n  },\n  {\n    \"id\": \"MMR\",\n    \"value\": 300520\n  },\n  {\n    \"id\": \"MNE\",\n    \"value\": 489008\n  },\n  {\n    \"id\": \"MNG\",\n    \"value\": 438267\n  },\n  {\n    \"id\": \"MOZ\",\n    \"value\": 820642\n  },\n  {\n    \"id\": \"MRT\",\n    \"value\": 281202\n  },\n  {\n    \"id\": \"MWI\",\n    \"value\": 653710\n  },\n  {\n    \"id\": \"MYS\",\n    \"value\": 921882\n  },\n  {\n    \"id\": \"NAM\",\n    \"value\": 230795\n  },\n  {\n    \"id\": \"NCL\",\n    \"value\": 193560\n  },\n  {\n    \"id\": \"NER\",\n    \"value\": 378583\n  },\n  {\n    \"id\": \"NGA\",\n    \"value\": 756796\n  },\n  {\n    \"id\": \"NIC\",\n    \"value\": 534183\n  },\n  {\n    \"id\": \"NLD\",\n    \"value\": 554839\n  },\n  {\n    \"id\": \"NOR\",\n    \"value\": 781415\n  },\n  {\n    \"id\": \"NPL\",\n    \"value\": 504907\n  },\n  {\n    \"id\": \"NZL\",\n    \"value\": 452445\n  },\n  {\n    \"id\": \"OMN\",\n    \"value\": 641285\n  },\n  {\n    \"id\": \"PAK\",\n    \"value\": 24219\n  },\n  {\n    \"id\": \"PAN\",\n    \"value\": 250717\n  },\n  {\n    \"id\": \"PER\",\n    \"value\": 821870\n  },\n  {\n    \"id\": \"PHL\",\n    \"value\": 619056\n  },\n  {\n    \"id\": \"PNG\",\n    \"value\": 374137\n  },\n  {\n    \"id\": \"POL\",\n    \"value\": 155603\n  },\n  {\n    \"id\": \"PRI\",\n    \"value\": 925523\n  },\n  {\n    \"id\": \"PRT\",\n    \"value\": 288909\n  },\n  {\n    \"id\": \"PRY\",\n    \"value\": 145628\n  },\n  {\n    \"id\": \"QAT\",\n    \"value\": 689627\n  },\n  {\n    \"id\": \"ROU\",\n    \"value\": 869666\n  },\n  {\n    \"id\": \"RUS\",\n    \"value\": 760636\n  },\n  {\n    \"id\": \"RWA\",\n    \"value\": 236355\n  },\n  {\n    \"id\": \"ESH\",\n    \"value\": 106623\n  },\n  {\n    \"id\": \"SAU\",\n    \"value\": 213394\n  },\n  {\n    \"id\": \"SDN\",\n    \"value\": 352866\n  },\n  {\n    \"id\": \"SDS\",\n    \"value\": 921044\n  },\n  {\n    \"id\": \"SEN\",\n    \"value\": 215746\n  },\n  {\n    \"id\": \"SLB\",\n    \"value\": 237796\n  },\n  {\n    \"id\": \"SLE\",\n    \"value\": 934346\n  },\n  {\n    \"id\": \"SLV\",\n    \"value\": 990530\n  },\n  {\n    \"id\": \"ABV\",\n    \"value\": 624897\n  },\n  {\n    \"id\": \"SOM\",\n    \"value\": 333896\n  },\n  {\n    \"id\": \"SRB\",\n    \"value\": 493545\n  },\n  {\n    \"id\": \"SUR\",\n    \"value\": 301192\n  },\n  {\n    \"id\": \"SVK\",\n    \"value\": 885055\n  },\n  {\n    \"id\": \"SVN\",\n    \"value\": 433281\n  },\n  {\n    \"id\": \"SWZ\",\n    \"value\": 885630\n  },\n  {\n    \"id\": \"SYR\",\n    \"value\": 779427\n  },\n  {\n    \"id\": \"TCD\",\n    \"value\": 897692\n  },\n  {\n    \"id\": \"TGO\",\n    \"value\": 615755\n  },\n  {\n    \"id\": \"THA\",\n    \"value\": 419469\n  },\n  {\n    \"id\": \"TJK\",\n    \"value\": 605714\n  },\n  {\n    \"id\": \"TKM\",\n    \"value\": 472445\n  },\n  {\n    \"id\": \"TLS\",\n    \"value\": 75084\n  },\n  {\n    \"id\": \"TTO\",\n    \"value\": 11182\n  },\n  {\n    \"id\": \"TUN\",\n    \"value\": 111675\n  },\n  {\n    \"id\": \"TUR\",\n    \"value\": 607287\n  },\n  {\n    \"id\": \"TWN\",\n    \"value\": 730179\n  },\n  {\n    \"id\": \"TZA\",\n    \"value\": 402502\n  },\n  {\n    \"id\": \"UGA\",\n    \"value\": 98901\n  },\n  {\n    \"id\": \"UKR\",\n    \"value\": 163423\n  },\n  {\n    \"id\": \"URY\",\n    \"value\": 999968\n  },\n  {\n    \"id\": \"USA\",\n    \"value\": 629940\n  },\n  {\n    \"id\": \"UZB\",\n    \"value\": 470292\n  },\n  {\n    \"id\": \"VEN\",\n    \"value\": 217086\n  },\n  {\n    \"id\": \"VNM\",\n    \"value\": 524140\n  },\n  {\n    \"id\": \"VUT\",\n    \"value\": 571009\n  },\n  {\n    \"id\": \"PSE\",\n    \"value\": 563751\n  },\n  {\n    \"id\": \"YEM\",\n    \"value\": 409969\n  },\n  {\n    \"id\": \"ZAF\",\n    \"value\": 442171\n  },\n  {\n    \"id\": \"ZMB\",\n    \"value\": 140124\n  },\n  {\n    \"id\": \"ZWE\",\n    \"value\": 187956\n  },\n  {\n    \"id\": \"KOR\",\n    \"value\": 297528\n  }\n];\n\nclass ChoroplethChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textColor: this.props.textColor,\n      colorScale: this.props.colorScale,\n      seriesScale: this.props.seriesScale,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      textColor: nextProps.textColor,\n      colorScale: nextProps.colorScale,\n      seriesScale: nextProps.seriesScale,\n    });\n  }\n\n  render() {\n    return (\n    <ResponsiveChoropleth\n      data={data}\n      features={countries.features}\n      margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n      // colors=\"nivo\"\n      colors={this.state.colorScale}\n      domain={[ 0, 1000000 ]}\n      unknownColor={this.state.colorScale[0]}\n      label=\"properties.name\"\n      valueFormat=\".2s\"\n      projectionTranslation={[ 0.5, 0.5 ]}\n      projectionRotation={[ 0, 0, 0 ]}\n      enableGraticule={false}\n      // graticuleLineColor=\"#dddddd\"\n      borderWidth={0.5}\n      borderColor=\"#152538\"\n      legends={[\n        {\n          anchor: 'bottom-left',\n          direction: 'column',\n          justify: true,\n          translateX: 20,\n          translateY: -100,\n          itemsSpacing: 2,\n          itemWidth: 80,\n          itemHeight: 20,\n          itemDirection: 'left-to-right',\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: 'circle',\n        }\n      ]}\n      theme={{\n        textColor: this.state.textColor,\n        tooltip: {\n          container: {\n            color: \"black\",\n          },\n        },\n        axis: {\n          ticks: {\n            line: {\n              stroke: chroma(this.state.textColor).alpha(.2).hex()\n            },\n          },\n        },\n        grid: {\n          line: {\n            stroke: chroma(this.state.textColor).alpha(.2).hex()\n          }\n        }\n      }}\n  />\n        );\n  }\n}\n\nexport default ChoroplethChart;\n","/Users/Kevin/github/datavis-master/src/components/charts/world_countries.js",[],{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":598,"column":40,"nodeType":"122","messageId":"123","endLine":598,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":609,"column":40,"nodeType":"122","messageId":"123","endLine":609,"endColumn":42},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":63,"column":7,"nodeType":"114","messageId":"115","endLine":63,"endColumn":11},{"ruleId":"116","replacedBy":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"116","replacedBy":"129"},{"ruleId":"118","replacedBy":"130"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":93,"column":16,"nodeType":"114","messageId":"133","endLine":93,"endColumn":17},{"ruleId":"131","severity":1,"message":"134","line":94,"column":13,"nodeType":"114","messageId":"133","endLine":94,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":103,"column":16,"nodeType":"114","messageId":"133","endLine":103,"endColumn":17},{"ruleId":"131","severity":1,"message":"134","line":104,"column":13,"nodeType":"114","messageId":"133","endLine":104,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":116,"column":16,"nodeType":"114","messageId":"133","endLine":116,"endColumn":17},{"ruleId":"131","severity":1,"message":"134","line":117,"column":13,"nodeType":"114","messageId":"133","endLine":117,"endColumn":16},{"ruleId":"116","replacedBy":"135"},{"ruleId":"118","replacedBy":"136"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":102,"column":16,"nodeType":"114","messageId":"133","endLine":102,"endColumn":17},{"ruleId":"131","severity":1,"message":"134","line":103,"column":13,"nodeType":"114","messageId":"133","endLine":103,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":4,"column":7,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},"no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["137"],["138"],"'keys' is assigned a value but never used.",["137"],["138"],["137"],["138"],"no-redeclare","'i' is already defined.","redeclared","'obj' is already defined.",["137"],["138"],"no-global-assign","no-unsafe-negation"]